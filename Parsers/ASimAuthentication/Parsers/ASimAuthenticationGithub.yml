Parser:
  Title: ASIM Authentication parser for <product name>
  Version: '0.1'
  LastUpdated: <Mar 03, 2024>
Product:
  Name: Github
Normalization:
  Schema: Authentication
  Version: '<current schema version>'
References:
- Title: ASIM Authentication Schema
  Link: https://aka.ms/ASimAuthenticationDoc
- Title: ASIM
  Link: https:/aka.ms/AboutASIM
Description: |
  This ASIM parser supports normalizing the <product name> logs to the ASIM Authentication normalized schema.
ParserName: ASim_Authentication_Github
EquivalentBuiltInParser: _ASim_Authentication_Github
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
    let parser = (
    disabled: bool = false
    ) 
      {
        let EventResultDetailslookup=datatable
        (
            EventOriginalResultDetails: string,
            EventResult: string,
            EventType: string
        )
        ["user.login", "Success", "logon",
        "user.logout", "Success", "logoff",
        "user.two_factor_challenge_success", "Success", "logon",
        "user.two_factor_challenge_failure", "Failure", "logon",
        "user.two_factor_requested", "Success", "logon",
        "user.failed_login", "Failure", "logon",
        "user.device_verification_success", "Success", "logon",
        "user.device_verification_requested", "NA", "logon",
        "user.two_factor_recovery_codes_downloaded", "NA", "logon",
        "user.sign_in_from_unrecognized_device", "NA", "logon",
        "user.reset_password", "Success", "logon",
        "user.forgot_password", "Success", "logon", ];
        GitHubAuditLogPolling_CL //--> Use this table when deploying the parser//
        //GithubCustom_CL 
        | where operation_type_s=='authentication'
        | project TimeGenerated=unixtime_milliseconds_todatetime(created_at_d),   
        EventCount=int(1),
        EventProduct = 'Github',
        EventVendor = 'Microsoft',
        EventSchema='Authentication',
        EventSchemaVersion='0.1.3',
        EventUid=column_ifexists('_document_id_s', ""),    
        Actor=column_ifexists('actor_s', ""),
        EventStartTime=TimeGenerated,
        EventOriginalResultDetails=action_s
        | lookup EventResultDetailslookup on EventOriginalResultDetails	
      };
      parser  
      (
          disabled = disabled
      )
   
